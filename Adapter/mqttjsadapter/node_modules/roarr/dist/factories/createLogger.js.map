{"version":3,"sources":["../../src/factories/createLogger.js"],"names":["globalThis","createLogger","onMessage","parentContext","log","a","b","c","d","e","f","g","h","i","k","time","Date","now","sequence","ROARR","context","message","TypeError","JSON","parse","version","child","getContext","logLevel","logLevels","Object","keys"],"mappings":"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","sourcesContent":["// @flow\n\nimport createGlobalThis from 'globalthis';\nimport stringify from 'json-stringify-safe';\nimport {\n  sprintf,\n} from 'sprintf-js';\nimport type {\n  LoggerType,\n  MessageContextType,\n  MessageEventHandlerType,\n  TranslateMessageFunctionType,\n} from '../types';\nimport {\n  logLevels,\n} from '../constants';\n\nconst globalThis = createGlobalThis();\n\nconst createLogger = (onMessage: MessageEventHandlerType, parentContext?: MessageContextType): LoggerType => {\n  // eslint-disable-next-line id-length, unicorn/prevent-abbreviations\n  const log = (a, b, c, d, e, f, g, h, i, k) => {\n    const time = Date.now();\n    const sequence = globalThis.ROARR.sequence++;\n\n    let context;\n    let message;\n\n    if (typeof a === 'string') {\n      context = {\n        ...parentContext || {},\n      };\n      message = sprintf(a, b, c, d, e, f, g, h, i, k);\n    } else {\n      if (typeof b !== 'string') {\n        throw new TypeError('Message must be a string.');\n      }\n\n      context = JSON.parse(stringify({\n        ...parentContext || {},\n        ...a,\n      }));\n\n      message = sprintf(b, c, d, e, f, g, h, i, k);\n    }\n\n    onMessage({\n      context,\n      message,\n      sequence,\n      time,\n      version: '1.0.0',\n    });\n  };\n\n  log.child = (context: TranslateMessageFunctionType | MessageContextType): LoggerType => {\n    if (typeof context === 'function') {\n      return createLogger((message) => {\n        if (typeof context !== 'function') {\n          throw new TypeError('Unexpected state.');\n        }\n        onMessage(context(message));\n      }, parentContext);\n    }\n\n    return createLogger(onMessage, {\n      ...parentContext,\n      ...context,\n    });\n  };\n\n  log.getContext = (): MessageContextType => {\n    return {\n      ...parentContext || {},\n    };\n  };\n\n  for (const logLevel of Object.keys(logLevels)) {\n    // eslint-disable-next-line id-length, unicorn/prevent-abbreviations\n    log[logLevel] = (a, b, c, d, e, f, g, h, i, k) => {\n      return log.child({\n        logLevel: logLevels[logLevel],\n      })(a, b, c, d, e, f, g, h, i, k);\n    };\n  }\n\n  // @see https://github.com/facebook/flow/issues/6705\n  // $FlowFixMe\n  return log;\n};\n\nexport default createLogger;\n"],"file":"createLogger.js"}